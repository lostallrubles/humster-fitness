//Датчик присоединен ко выводу № 2
#define pinSensor 2
// mt16s2h

//Переменная счетчик срабатываний датчика. целое число без знака (больше или равно нулю)
//ключевое слово volatile нужно потому что значение переменной будет меняться в обработчике прерывания
volatile unsigned long counter;

//Переменная в которй будем хранить значение времени последнего срабатывания датчика (защита от дребезга контактов)
volatile unsigned long lastTick = millis();


//Эта функция вызывается один раз при подаче питания или после сброса контроллера
void setup() {
  //Сбрасываем значение счетчика оборотов в ноль
  counter = 0;
  
  //Настраиваем порт датчика на режим чтения с подтяжкой уровня к питанию
  pinMode(pinSensor, INPUT_PULLUP);
  
  //Настраиваем нулевое прерывание на нисходящий фронт сигнала от датчика.
  //Всего в контроллере есть два прерывания. Нулевое на ножке № 2, первое на ножке № 3
  attachInterrupt(0, interruptFunction, FALLING);

  //Включаем последовательный порт и настраиваем скорость порта в 115200 бит/сек
  Serial.begin(115200);
  Serial.println("=== Start working ===");
}

void loop() {
  getSpeed();
  delay(500);
}

void getSpeed(){
  float secondsElapsed = (millis() / 1000); //столько секунд работает наша программа  
  Serial.print("скорость хомячка (об/сек):");
  Serial.println(counter / secondsElapsed);
}

//Эта функция вызывается всякий раз, когда датчик замыкается на землю (сигнал с высокого уровня +5В переходит в низкий уровень 0В)
void interruptFunction(){
  /* Так как контакты имеют дребезг, а хомячок не очень стремителен, 
     то считаем, что он крутит барабан не быстрее трех оборотов в секунду (300 миллисекунд на оборот).
     если это случается быстрее, то значит это не хомячок, а дребезг контактов. 
  */
  unsigned long currentTime = millis(); //сколько миллисекунд прошло со времени старта программы
  if ((currentTime - lastTick) > 300) {
    counter = counter + 1;   //Увеличиваем значение счетчика на единицу
    lastTick = currentTime;  // Запоминаем когда последний раз мы реагировали на датчик
    // Выводим в порт значение счетчика оборотов
    Serial.print("Оборотов: "); 
    Serial.println(counter);
  }
}

